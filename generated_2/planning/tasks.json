{
    "tasks": [
        {
            "id": "TASK-1",
            "name": "Registration Endpoint Implementation",
            "description": "Develop REST API endpoints for user registration including email validation, unique user ID generation, and OAuth integration.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "Endpoints must validate user input, generate unique user IDs, hash passwords securely, and support Google and Facebook OAuth integration.",
            "technicalNotes": "Use bcrypt for password hashing; securely store OAuth tokens; implement comprehensive unit tests.",
            "assignee": "",
            "estimatedHours": 15,
            "linkedIssues": ["STORY-1.1"]
        },
        {
            "id": "TASK-2",
            "name": "Login Endpoint Implementation",
            "description": "Develop REST API endpoint for user login with credential validation and session management.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "Login endpoint must support email/password and OIDC login; enforce rate limiting and account lockout; provide proper redirection based on user type.",
            "technicalNotes": "Implement JWT or session-based authentication; include CSRF protection; log authentication attempts for monitoring.",
            "assignee": "",
            "estimatedHours": 10,
            "linkedIssues": ["STORY-1.2"]
        },
        {
            "id": "TASK-3",
            "name": "Tuition Request Form Development",
            "description": "Develop the form for creating tuition requests with fields for address, timeslots, education level, subjects, fee, and start date.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Form includes all required fields; validations are enforced both on client and server side; successfully submits and stores a new tuition request with 'open' status.",
            "technicalNotes": "Integrate geolocation API for address assistance; implement calendar/time picker; ensure robust error handling and validation.",
            "assignee": "",
            "estimatedHours": 12,
            "linkedIssues": ["STORY-2.1"]
        },
        {
            "id": "TASK-4",
            "name": "Tutor Profile Service Development",
            "description": "Develop functionality for tutor profile creation including multi-select options, file upload for profile pictures, and automatic expertise level calculation.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Profile form functions correctly; file uploads are secure; expertise level indicator calculates accurately; profile preview and save functionality are operational.",
            "technicalNotes": "Implement secure file upload mechanisms; set up scheduled tasks for profile updates; consider versioning for profile changes.",
            "assignee": "",
            "estimatedHours": 15,
            "linkedIssues": ["STORY-3.1"]
        },
        {
            "id": "TASK-5",
            "name": "Notification Service Implementation",
            "description": "Develop a background service to send notifications to tutors about new offers at regular intervals.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Background service runs every 5 minutes to identify new offers, sends emails with appropriate details, updates offer status to 'notified', and logs all notification attempts.",
            "technicalNotes": "Implement using a message queue; create standardized email templates; configure retry mechanisms and rate limiting to avoid email flooding.",
            "assignee": "",
            "estimatedHours": 10,
            "linkedIssues": ["STORY-4.1", "STORY-4.2"]
        }
    ]
}