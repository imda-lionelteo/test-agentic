{
    "stories": [
        {
            "id": "STORY-1.1",
            "name": "User Registration",
            "description": "As a new user, I want to register with my email address so that I can create an account on Tuition Central.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "Registration form includes fields for email address, full name, and password; User can select OIDC authentication with either Google or Facebook; System validates email format and checks for existing accounts; System generates a unique user ID; Captures full name and email; sets user type; sets user status to active; sends a welcome email.",
            "technicalNotes": "Implement password hashing; store OAuth tokens securely; create database indexes on email and user ID fields.",
            "assignee": "",
            "estimatedHours": 20,
            "linkedIssues": []
        },
        {
            "id": "STORY-1.2",
            "name": "User Login",
            "description": "As a returning user, I want to log in with my credentials so that I can access my account.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "Login form accepts email and password or OIDC authentication options; System validates credentials; Implements security measures like rate limiting and account lockout; Redirects user to the appropriate dashboard; Maintains session securely; Includes a 'Remember me' option; Provides password reset functionality.",
            "technicalNotes": "Implement JWT or session-based authentication; include CSRF protection; log authentication attempts for security monitoring.",
            "assignee": "",
            "estimatedHours": 15,
            "linkedIssues": []
        },
        {
            "id": "STORY-2.1",
            "name": "Create Tuition Request",
            "description": "As a requester, I want to create a tuition request so that I can find suitable tutors.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Form includes address field with optional geolocation; calendar/time picker for multiple preferred timeslots; dropdown for education level; multi-select for subjects; option for tutor expertise level; numeric field for fee with validation; date picker for start date with no past dates; Save button that stores request with 'open' status; system generates unique request ID; confirmation message; and draft saving functionality.",
            "technicalNotes": "Implement client-side validation across fields; integrate with geolocation API; create proper database indexing for search optimization.",
            "assignee": "",
            "estimatedHours": 25,
            "linkedIssues": []
        },
        {
            "id": "STORY-2.2",
            "name": "View Tuition Requests",
            "description": "As a requester, I want to view all my tuition requests so that I can manage them.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Dashboard displays a paginated list of requests with key info; Each request shows subject, education level, status, and creation date; Statuses are color-coded or icon-marked; Sorting and filtering options available; Detailed view, edit, cancel, and archive functionalities provided.",
            "technicalNotes": "Optimized database queries and lazy loading implementation for better performance.",
            "assignee": "",
            "estimatedHours": 18,
            "linkedIssues": []
        },
        {
            "id": "STORY-2.3",
            "name": "Search for Matching Tutors",
            "description": "As a requester, I want to search for matching tutors so that I can offer them tuition opportunities.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "User selects an open request and initiates a search; System matches based on education level, subject, fee, and expertise; Results display tutor profiles with key information and profile completeness; Pagination, sorting, and filtering are enabled; Provides suggestions when few or no matches are found.",
            "technicalNotes": "Efficient search algorithm with appropriate indexing; caching frequent search results; fuzzy matching considerations.",
            "assignee": "",
            "estimatedHours": 22,
            "linkedIssues": []
        },
        {
            "id": "STORY-2.4",
            "name": "Send Offers to Tutors",
            "description": "As a requester, I want to send offers to selected tutors so that I can engage their services.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Checkbox selection for tutors; 'Send Offer' button active when selection is made; Confirmation dialog before sending; Option to include an additional message; System creates offer entries with status 'new'; Confirmation message shows number of offers sent; Limit on maximum simultaneous offers per request.",
            "technicalNotes": "Implement transaction handling for data consistency; integrate with notification queue for processing.",
            "assignee": "",
            "estimatedHours": 16,
            "linkedIssues": []
        },
        {
            "id": "STORY-3.1",
            "name": "Tutor Profile Creation",
            "description": "As a tutor, I want to create my profile so that I can be matched with appropriate tuition requests.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Multi-select options for subject expertise and education levels; numeric fields for years of experience and A1 student count; range selector for expected fee; optional fields for qualifications and certifications; option to upload a profile picture; availability calendar; automatic calculation of expertise level; preview feature; profile completion indicator; save and publish options provided.",
            "technicalNotes": "Implement secure file upload; scheduled task for recalculating expertise levels; consider versioning for profile updates.",
            "assignee": "",
            "estimatedHours": 30,
            "linkedIssues": []
        },
        {
            "id": "STORY-3.2",
            "name": "View and Manage Offers",
            "description": "As a tutor, I want to view and manage offers so that I can accept tuition opportunities.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Dashboard displays all offers with status filters (new, notified, accepted, declined); Each offer details request information including requester name, subject, fee, location, and timeslot; Map view and distance info available when location data exists; Sorting, detailed view, and batch selection options provided along with a request-for-more-info option.",
            "technicalNotes": "Implement read receipts; utilize geolocation services; optimize queries for large datasets.",
            "assignee": "",
            "estimatedHours": 20,
            "linkedIssues": []
        },
        {
            "id": "STORY-3.3",
            "name": "Accept Offers",
            "description": "As a tutor, I want to accept offers so that I can confirm tuition arrangements.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Checkbox selection for offers; 'Accept' button activates on selection; Confirmation dialog appears; System updates request status to 'accepted' if currently open; Offer status updated to 'accepted'; Provides clear feedback and logs a timestamp; Notifies requester and facilitates contact information exchange.",
            "technicalNotes": "Database transactions to ensure consistency; handle race conditions for simultaneous acceptances; include audit logging for actions.",
            "assignee": "",
            "estimatedHours": 18,
            "linkedIssues": []
        },
        {
            "id": "STORY-4.1",
            "name": "Send Notifications to Tutors",
            "description": "As a system administrator, I want the system to send notifications to tutors about new offers so that they can respond promptly.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Background service runs every 5 minutes; identifies offers with status 'new'; generates email content with offer details; sends personalized email notifications; updates offer status to 'notified'; logs notification attempts; implements retry and rate limiting mechanisms.",
            "technicalNotes": "Implement message queue for processing; create standardized email templates; configure monitoring and retry mechanisms.",
            "assignee": "",
            "estimatedHours": 15,
            "linkedIssues": []
        },
        {
            "id": "STORY-4.2",
            "name": "Receive Notifications",
            "description": "As a tutor, I want to receive notifications about new offers so that I can respond to them.",
            "status": "To Do",
            "priority": "Medium",
            "acceptanceCriteria": "Tutor receives an email containing requester info, subject, education level, general location, fee, preferred timeslots, and starting date; email includes a call-to-action button and direct link; option to accept directly from email with secure token; in-app notification center with management options provided.",
            "technicalNotes": "Implement secure tokens for direct email actions; consider push notifications and track email open/click rates.",
            "assignee": "",
            "estimatedHours": 12,
            "linkedIssues": []
        },
        {
            "id": "STORY-5.1",
            "name": "Matching Requesters with Tutors",
            "description": "As a system administrator, I want the system to match requesters with tutors based on specified criteria so that appropriate connections are made.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "Matching algorithm considers education level, subjects, fee compatibility, and expertise level; optional proximity and availability matching; returns paginated and sorted results by relevance; tracks performance metrics; handles edge cases and allows tuning without code changes.",
            "technicalNotes": "Implement efficient indexing; use caching mechanisms; design for horizontal scaling; provide monitoring statistics.",
            "assignee": "",
            "estimatedHours": 25,
            "linkedIssues": []
        },
        {
            "id": "STORY-5.2",
            "name": "Display Match Quality Indicators",
            "description": "As a requester or tutor, I want to see match quality indicators so that I can make informed decisions.",
            "status": "To Do",
            "priority": "High",
            "acceptanceCriteria": "System calculates and displays a match percentage or score; visual indicators show strengths and mismatches; explanation for match decisions provided; suggestions for improvement and historical success rates displayed; integrated rating system.",
            "technicalNotes": "Develop an algorithm for calculating match quality; design intuitive visual indicators; implement a feedback loop for continuous improvement.",
            "assignee": "",
            "estimatedHours": 10,
            "linkedIssues": []
        }
    ]
}